library(tidyverse)
setwd('/Users/jimin/Desktop/데스크탑 - 이지민의 MacBook Air/지민/ewha/2023-2/Regression/week2')
data = read.table('spaghetti.txt')
head(data)
mean.sp = mean(data$spaghetti)
sd.sp = sd(data$spaghetti)
cat('mean :',mean.sp,'\nsd :', sd.sp)
ggplot(data, aes(x=spaghetti)) + geom_histogram(binwidth = 0.12)
nrow(data) # num of obesrvations
calTestStatistic <- function(s, n, x.bar, M) {
se <- s / sqrt(n)
t_value <- (x.bar - M) / se
return(t_value)
}
t.stat = calTestStatistic(x.bar=mean.sp, M=16, s=sd.sp, n=nrow(data))
t.stat
tt = t.test(x=data$spaghetti, alternative='less', mu=16, conf.level = 0.99)
tt$p.value
tt
data.2 = read.table('record.txt')
head(data.2)
pairs(data.2) # Positively increasing
x = data.2$m100 # response
y = data.2$m400 # predictor
b1 = sum((y-mean(y))*(x-mean(x)))/sum((x-mean(x))^2)
b0 = mean(y) - mean(x)*b1
cat('b0 : ',b0,'\nb1 : ',b1)
plt = ggplot(data=data.2, aes(x=m100, y=m400)) +
geom_point() +
stat_smooth(method = "lm", formula = y ~ x, geom = "smooth") +
ggtitle('Linear Regression line and scatter plot')
plt
X = cbind(1, x)
b.vec = solve(t(X)%*%X)%*%t(X)%*%y
b.vec
lm.fit = lm(y~x) # linear regression
summary(lm.fit)
print('fitted.values')
fitted(lm.fit)
print('residuals')
residuals(lm.fit)
cor(data.2)
